# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.
imports:
    - { resource: 'services/admins/enterprise.yaml' }
    - { resource: 'services/admins/operator.yaml' }
    - { resource: 'services/admins/partner.yaml' }
    - { resource: 'services/admins/payslip.yaml' }
    - { resource: 'services/admins/sale.yaml' }
    - { resource: 'services/admins/setting.yaml' }
    - { resource: 'services/admins/vehicle.yaml' }
    - { resource: 'services/admins/web.yaml' }
# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    default_locale:            '%env(string:DEFAULT_LOCALE)%'
    project_web_title:         '%env(string:PROJECT_WEB_TITLE)%'
    project_admin_title:       '%env(string:PROJECT_ADMIN_TITLE)%'
    project_url_base:          '%env(string:PROJECT_BASE_URL)%'
    google_analytics_enabled:  '%env(bool:GOOGLE_ANALYTICS_IS_ENABLED)%'
    google_analytics_account:  '%env(string:GOOGLE_ANALYTICS_ACCOUNT)%'
    google_recaptcha_site_key: '%env(string:GOOGLE_RECAPTCHA_SITE_KEY)%'
    google_maps_api_key:       '%env(string:GOOGLE_MAPS_API_KEY)%'
    delivery_dev_address:      '%env(string:DEV_DELIVERY_ADDRESS)%'
    mailer_url_base:           '%env(string:MAILER_URL_BASE)%'
    mailer_destination:        '%env(string:MAILER_DESTINATION_ADDRESS)%'

services:
    # default configuration for services in *this* file
    _defaults:
        public:        false
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:
            $amd:              '%mailer_destination%'
            $urlBase:          '%mailer_url_base%'
            $commandName:      ~
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    # Menu
    app.frontend_menu_builder:
        class: App\Menu\FrontendMenuBuilder
        arguments: [ '@knp_menu.factory', '@security.authorization_checker', '@security.token_storage', '@App\Repository\Vehicle\VehicleCategoryRepository', '@App\Repository\Web\ServiceRepository', '@App\Repository\Web\WorkRepository', '@App\Repository\Web\ComplementRepository', '@router' ]
    app.frontend_top_menu:
        class: Knp\Menu\MenuItem
        factory: [ '@App\Menu\FrontendMenuBuilder', createTopMenu ]
        arguments: [ '@request_stack' ]
        tags:
            - { name: knp_menu.menu, alias: top }
    app.frontend_vehicle_category_menu:
        class: Knp\Menu\MenuItem
        factory: [ '@App\Menu\FrontendMenuBuilder', createVehicleCategoryMenu ]
        arguments: [ '@request_stack' ]
        tags:
            - { name: knp_menu.menu, alias: vehicle_category }
    app.frontend_service_menu:
        class: Knp\Menu\MenuItem
        factory: [ '@App\Menu\FrontendMenuBuilder', createServiceMenu ]
        arguments: [ '@request_stack' ]
        tags:
            - { name: knp_menu.menu, alias: service }
    app.frontend_footer_menu:
        class: Knp\Menu\MenuItem
        factory: [ '@App\Menu\FrontendMenuBuilder', createFooterMenu ]
        arguments: [ '@request_stack' ]
        tags:
            - { name: knp_menu.menu, alias: footer }
    app.frontend_sitemap_menu:
        class: Knp\Menu\MenuItem
        factory: [ '@App\Menu\FrontendMenuBuilder', createSitemapMenu ]
        arguments: [ '@request_stack' ]
        tags:
            - { name: knp_menu.menu, alias: sitemap }
    # Sitemap
    app.sitemap:
        class: App\Listener\SitemapListener
        arguments: [ '@App\Menu\FrontendMenuBuilder' ]
        tags: [ { name: 'presta.sitemap.listener' } ]
    # Block
    app.block.contact_message:
        class: App\Block\ContactMessageBlock
        arguments: [ '@twig', '@doctrine.orm.entity_manager' ]
        tags:
            - { name: sonata.block }
    app.block.vehicle_checking:
        class: App\Block\VehicleCheckingBlock
        arguments: [ '@twig', '@App\Repository\Vehicle\VehicleCheckingRepository', '@security.token_storage' ]
        tags:
            - { name: sonata.block }
    app.block.vehicle_maintenance:
        class: App\Block\VehicleMaintenanceBlock
        arguments: [ '@twig', '@App\Repository\Vehicle\VehicleMaintenanceRepository']
        tags:
            - { name: sonata.block }
    app.block.operator_checking:
        class: App\Block\OperatorCheckingBlock
        arguments: [ '@twig', '@App\Repository\Operator\OperatorCheckingRepository', '@security.token_storage' ]
        tags:
            - { name: sonata.block }
    app.block.operator_absence:
        class: App\Block\OperatorAbsenceBlock
        arguments: [ '@twig', '@App\Repository\Operator\OperatorAbsenceRepository', '@security.token_storage' ]
        tags:
            - { name: sonata.block }
    app.block.sale_request_today:
        class: App\Block\SaleRequestTodayBlock
        arguments: [ '@twig', '@App\Repository\Sale\SaleRequestRepository', '@security.token_storage' ]
        tags:
            - { name: sonata.block }
    app.block.sale_request_tomorrow:
        class: App\Block\SaleRequestTomorrowBlock
        arguments: [ '@twig', '@App\Repository\Sale\SaleRequestRepository', '@security.token_storage' ]
        tags:
            - { name: sonata.block }
    app.block.sale_request_next:
        class: App\Block\SaleRequestNextBlock
        arguments: [ '@twig', '@App\Repository\Sale\SaleRequestRepository', '@security.token_storage' ]
        tags:
            - { name: sonata.block }
    app.block.sale_request_status_pending:
        class: App\Block\SaleRequestStatusPendingBlock
        arguments: [ '@twig', '@App\Repository\Sale\SaleRequestRepository', '@security.token_storage' ]
        tags:
            - { name: sonata.block }
    app.block.sale_request_status_in_process:
        class: App\Block\SaleRequestStatusInProcessBlock
        arguments: [ '@twig', '@App\Repository\Sale\SaleRequestRepository', '@security.token_storage' ]
        tags:
            - { name: sonata.block }
    app.block.sale_request_status_to_be_approved_or_to_settle_on:
        class: App\Block\SaleRequestStatusToBeApprovedOrToSettleOnBlock
        arguments: [ '@twig', '@App\Repository\Sale\SaleRequestRepository', '@security.token_storage' ]
        tags:
            - { name: sonata.block }
    app.block.operator_work_register_creation:
        class: App\Block\OperatorWorkRegisterCreationBlock
        arguments: [ '@twig', '@App\Repository\Operator\OperatorRepository', '@App\Repository\Sale\SaleDeliveryNoteRepository','@security.token_storage' ]
        tags:
            - { name: sonata.block }
