{% extends 'admin/edit.html.twig' %}

{# override javascript includes #}
{% block javascripts %}
    {{ parent() }}
    <script src="{{ asset('bundles/fosjsrouting/js/router.min.js') }}"></script>
    <script src="{{ path('fos_js_routing_js', { callback: 'fos.Router.setData' }) }}"></script>

    <script type="text/javascript">
        jQuery(document).ready(function() {
            var partnerNode = jQuery('#sonata-ba-field-container-{{ form.partner.vars.id }}');
            var cifNif = jQuery('#{{ form.cifNif.vars.id }}');
            var invoice = jQuery('#{{ form.saleInvoice.vars.id }}');
            var partner = jQuery('#{{ form.partner.vars.id }}');
            var cifNifIcon = jQuery('#cif-nif-icon');
            var totalCountedHours = 0;
            {% if  admin.id(admin.subject) %}
              let buildingSitesNode = jQuery('#{{ form.buildingSite.vars.id }}');
              let ordersNode = jQuery('#{{ form.order.vars.id }}');
              let projectsNode = jQuery('#{{ form.project.vars.id }}');
              {% if form.saleInvoice.vars.data %}
                  jQuery(`
                      <a href="{{ path('admin_app_sale_saleinvoice_edit', { 'id': form.saleInvoice.vars.data.id }) }}">
                          Ir a factura
                      </a>
                  `).insertAfter(invoice);
              {% endif %}
                {% if form.partner.vars.data %}
                jQuery(`
                          <a href="{{ path('admin_app_partner_client_edit', { 'id': form.partner.vars.data.id }) }}">
                              Ir a cliente
                          </a>
                      `).insertAfter(partnerNode);
                {% endif %}

            var deliveryNoteLinesTable = jQuery('#sonata-ba-field-container-{{ form.saleDeliveryNoteLines.vars.id }}');
                var numberOfDeliveryNoteLines = {{ form.saleDeliveryNoteLines.vars.data.count }};
                for (let i = 0; i < numberOfDeliveryNoteLines; i++) {
                    jQuery('#{{ form.saleDeliveryNoteLines.vars.id }}_' + i + '_saleItem').change(function(event) {
                            var saleItemId = parseInt(jQuery(event.target).val());
                            updatePriceAndQuantityDeliveryNoteLine(i, saleItemId);
                    }
                    );
                }

                function updatePriceAndQuantityDeliveryNoteLine(lineId, saleItemId) {
                    if (saleItemId < 4) {
                        var hourPrice = {{ admin.subject.hourPrice }} + 0;
                        var minimumHours = {{ admin.subject.miniumHours }} + 0;
                        var displacement = {{ admin.subject.displacement }} + 0;
                        var minimumHolidayHours = {{ admin.subject.miniumHolidayHours }} + 0;
                        var increaseForHolidays = {{ admin.subject.increaseForHolidays }} + 0;
                        var increaseForHolidaysPercentage = {{ admin.subject.increaseForHolidaysPercentage }} + 0;
                        var units = 0;
                        if (saleItemId === 1) {
                          units = Math.max(minimumHours, totalCountedHours);
                        } else if (saleItemId === 2) {
                            if (increaseForHolidaysPercentage) {
                                hourPrice = hourPrice*(100 + increaseForHolidaysPercentage)/100;
                            }
                            if (increaseForHolidays) {
                                hourPrice = hourPrice + increaseForHolidays;
                            }
                            units = Math.max(minimumHolidayHours, totalCountedHours);
                            jQuery('#{{ form.saleDeliveryNoteLines.vars.id }}_' + lineId + '_units').val(minimumHolidayHours);
                        } else if (saleItemId === 3) {
                            units = displacement;
                        }
                        jQuery('#{{ form.saleDeliveryNoteLines.vars.id }}_' + lineId + '_units').val(units);
                        jQuery('#{{ form.saleDeliveryNoteLines.vars.id }}_' + lineId + '_priceUnit').val(hourPrice);
                    } else {
                        jQuery('#{{ form.saleDeliveryNoteLines.vars.id }}_' + lineId + '_priceUnit').val(0);
                        jQuery('#{{ form.saleDeliveryNoteLines.vars.id }}_' + lineId + '_units').val(0);
                    }
                }

                deliveryNoteLinesTable.on('sonata.add_element', function (event) {
                numberOfDeliveryNoteLines++;
                var i = numberOfDeliveryNoteLines - 1;
                jQuery('#{{ form.saleDeliveryNoteLines.vars.id }}_' + i + '_saleItem').change(function(event) {
                    var saleItemId = parseInt(jQuery(event.target).val());
                    updatePriceAndQuantityDeliveryNoteLine(i, saleItemId);
                  }
                );
                })

                var workRegistersTable = jQuery('#sonata-ba-field-container-{{ form.operatorWorkRegisters.vars.id }}');
                var numberOfWorkRegisters = {{ form.operatorWorkRegisters.vars.data.count }};
                var totalUnits = 0;
                var totalAmount = 0;
                for (var i = 0; i < numberOfWorkRegisters; i++) {
                  if (jQuery('#{{ form.operatorWorkRegisters.vars.id }}_' + i + '_start').val()) {
                    totalUnits += jQuery('#{{ form.operatorWorkRegisters.vars.id }}_' + i + '_units').val().replace(',','.')*1;
                  }
                  totalAmount += jQuery('#{{ form.operatorWorkRegisters.vars.id }}_' + i + '_amount').val()*1;
                }
                if (numberOfWorkRegisters) {
                  totalCountedHours = totalUnits;
                  $info = `
                    <div>
                        <div class="pull-right" style="margin-right: 10px;">
                            <label for="totalUnits" class="control-label">Total: </label>
                            <label class="control-label"> ${totalAmount} €</label>
                        </div>
                    </div>
                    <div>
                        <div class="pull-right" style="margin-right: 10px;">
                            <label for="totalUnits" class="control-label">Total horas: </label>
                            <label class="control-label"> ${totalUnits} </label>
                        </div>
                    </div>
                  `;
                } else {
                  $info = `
                    <div>
                        <div class="pull-left" style="margin-right: 10px;">
                            <label class="control-label">
                              No se han registrado partes de trabajo.
                              <a href="{{ path('admin_app_operator_operatorworkregisterheader_create') }}">
                                Registrar partes de trabajo
                                </a>
                            </label>
                        </div>
                    </div>
                  `
                }
              jQuery($info).insertAfter(workRegistersTable);
            {% endif %}

            partnerNode.change(function(event) {
                cifNifIcon.removeClass('hidden');
                var partnerId = jQuery(event.target).val();
              if (partnerId) {
                jQuery.get(Routing.generate('admin_app_partner_partner_getJsonPartnerById', {id: partnerId}), function () {
                }).done(function (response) {
                  updateNodesInfo(response);
                });
                jQuery.get(Routing.generate('admin_app_partner_partner_getJsonBuildingSitesById', { id: partnerId }), function() {
                }).done(function(response) {
                  updateBuildingSites(response);
                });
                jQuery.get(Routing.generate('admin_app_partner_partner_getJsonOrdersById', { id: partnerId }), function() {
                }).done(function(response) {
                  updateOrders(response);
                });
                jQuery.get(Routing.generate('admin_app_partner_partner_getJsonProjectsById', { id: partnerId }), function() {
                }).done(function(response) {
                  updateProjects(response);
                });
                jQuery.get(Routing.generate('admin_app_partner_client_checkIfPartnerIsBlocked', {id: partnerId}), function () {
                }).done(function (response) {
                  jQuery("#clientBlocked").remove();
                  jQuery("#clientBlockedAction").remove();
                  let actions = jQuery(".sonata-ba-form-actions")
                  if (response.isBlocked) {
                    jQuery(
                      '<label id="clientBlocked" class="warning" style="color: red">El cliente está bloqueado</label>'
                    ).insertAfter(partnerNode);
                    actions.children('button').addClass('disabled')
                    jQuery(
                      '<label id="clientBlockedAction" class="warning" style="color: red">No se puede asignar un cliente bloqueado</label>'
                    ).insertBefore(actions);
                  } else {
                    actions.children('button').removeClass('disabled')
                  }
                });
              }

            });

            {% if form.partner.vars.data is not null %}
                jQuery.get(Routing.generate('admin_app_partner_partner_getJsonPartnerById', { id: {{ form.partner.vars.data.id }} }), function() {
                }).done(function(response) {
                     updateNodesInfo(response);
                });
            {% endif %}

            function updateNodesInfo(response) {
                var partner = jQuery.parseJSON(response);
                cifNifIcon.addClass('hidden');
                cifNif.val(partner.cifNif);
            }

          function updateBuildingSites(response) {
            var partnerBuildingSitesData = jQuery.parseJSON(response);
            buildingSitesNode.empty();
            let newOption = new Option('-- elige una obra --', '', true, false);
            buildingSitesNode.append(newOption);
            partnerBuildingSitesData.forEach(
              function (value, index) {
                var newOption = new Option(value.text, value.id, false, false);
                buildingSitesNode.append(newOption);
              });
            buildingSitesNode.select2('val', '');
            buildingSitesNode.select2({
              enable: true,
              allowClear: true
            });
          }
          function updateOrders(response) {
              console.log('response orders', response);
            var partnerOrdersData = jQuery.parseJSON(response);
            ordersNode.empty();
            let newOption = new Option('-- elige un pedido --', '', true, false);
            ordersNode.append(newOption);
            partnerOrdersData.forEach(
              function (value, index) {
                var newOption = new Option(value.number, value.id, false, false);
                ordersNode.append(newOption);
              });
            ordersNode.select2('val', '');
            ordersNode.select2({
              enable: true,
              allowClear: true
            });
          }
          function updateProjects(response) {
              console.log('response orders', response);
            var partnerProjectsData = jQuery.parseJSON(response);
            projectsNode.empty();
            let newOption = new Option('-- elige un contrato --', '', true, false);
            projectsNode.append(newOption);
            partnerProjectsData.forEach(
              function (value, index) {
                var newOption = new Option(value.number, value.id, false, false);
                projectsNode.append(newOption);
              });
            projectsNode.select2('val', '');
            projectsNode.select2({
              enable: true,
              allowClear: true
            });
          }

        });
    </script>
{% endblock %}

{% block sonata_form_actions %}
    {% if form.saleInvoice.vars.data %}
        {% if form.saleInvoice.vars.data.hasBeenCounted %}
            <b>No se puede modificar un albarán facturado con factura contabilizada.</b>
        {% else %}
            {{ parent() }}
        {% endif %}
    {% else %}
        {{ parent() }}
    {% endif %}
{% endblock %}
